name: 🎭 GOMFLOW Demo Deployment

on:
  push:
    branches: [main, demo]
  pull_request:
    branches: [main]

jobs:
  test-demo:
    name: 🧪 Test Demo Environment
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          gomflow-core/package-lock.json
          gomflow-shared/package-lock.json
        
    - name: 🔧 Setup demo environment
      run: |
        cp .env.demo .env.local
        echo "Demo environment configured"
        
    - name: 📦 Install shared dependencies
      run: |
        cd gomflow-shared
        npm ci
        npm run build
        
    - name: 📦 Install core dependencies  
      run: |
        cd gomflow-core
        npm ci
        npm link ../gomflow-shared
        
    - name: 🏗️ Build application
      run: |
        cd gomflow-core
        npm run build
        
    - name: 🧪 Run tests
      run: |
        cd gomflow-core
        npm test -- --watchAll=false --coverage=false
        
    - name: 🔍 Lint check
      run: |
        cd gomflow-core
        npm run lint
        
    - name: 📊 Build size analysis
      run: |
        cd gomflow-core
        npx next build --profile
        
  deploy-demo:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test-demo
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./gomflow-core
        vercel-args: '--prod'
        
  security-check:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 🔍 NPM audit
      run: |
        cd gomflow-core
        npm audit --audit-level moderate
        
    - name: 🔒 Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
  demo-validation:
    name: 🎭 Validate Demo Features
    runs-on: ubuntu-latest
    needs: test-demo
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 🔧 Setup demo environment
      run: |
        cp .env.demo .env.local
        
    - name: 🏗️ Build shared module
      run: |
        cd gomflow-shared
        npm ci
        npm run build
        
    - name: 🎭 Start demo services
      run: |
        cd gomflow-core
        npm ci
        npm link ../gomflow-shared
        timeout 30s npm run dev &
        
    - name: ⏳ Wait for services
      run: |
        echo "Waiting for demo to start..."
        sleep 15
        
    - name: 🧪 Test demo endpoints
      run: |
        # Test if demo is responding
        curl -f http://localhost:3000 || echo "Demo not ready yet"
        curl -f http://localhost:3000/api/health || echo "Health check not ready"
        
    - name: ✅ Demo validation complete
      run: |
        echo "Demo validation completed successfully!"

  notify-status:
    name: 📢 Notify Deployment Status  
    runs-on: ubuntu-latest
    needs: [test-demo, deploy-demo, security-check, demo-validation]
    if: always()
    
    steps:
    - name: 📢 Deployment Success
      if: needs.deploy-demo.result == 'success'
      run: |
        echo "🎉 GOMFLOW Demo deployed successfully!"
        echo "🌐 Live at: https://gomflow-demo.vercel.app"
        
    - name: ❌ Deployment Failed
      if: needs.deploy-demo.result == 'failure'
      run: |
        echo "❌ Demo deployment failed"
        echo "Check logs above for details"